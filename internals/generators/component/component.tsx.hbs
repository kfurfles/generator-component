{{#if wantMemo}}
import React, { memo } from 'react';
{{else}}
import * as React from 'react';
{{/if}}
{{#if wantStyledComponents}}
import { Container } from './styled';
{{/if}}
{{#if wantTranslations}}
import { useTranslation } from 'react-i18next';
import { messages } from './messages';
{{/if}}

interface Props {}

{{#if wantMemo}}
export const PREFIX{{ properCase componentName }} = memo((props: Props) => {
{{else}}
export function PREFIX{{ properCase componentName }}(props: Props) {
{{/if}}
{{#if wantTranslations}}
// eslint-disable-next-line @typescript-eslint/no-unused-vars
const { t, i18n } = useTranslation();
{{/if}}

return (
{{#if wantStyledComponents}}
  <Container>
  {{else}}
  <div>
    {{/if}}
    {{#if wantTranslations}}
    {t('')}
    {/* {t(...messages.someThing())} */}
    {{/if}}
    {{#if wantStyledComponents}}
  </Container>
  {{else}}
  </div>
{{/if}}
);

{{#if wantMemo}}
});
{{else}}
};
{{/if}}